location对象
location对象包含有关当前url的信息
location对象是window对象的一部分，可通过window.loation属性来访问
location属性返回一个只读对象，提供了当前文档的URL信息
// 假定当前网址为http://user:passwd@www.example.com:4097/path/a.html?x=111#part1

document.location.href //"http://user:passwd@www.example.com:4097/path/a.html?x=111#part1"
document.location.protocol // "http:"
document.location.host // "www.example.com:4097"
document.location.hostname // "www.example.com"
document.location.port // "4097"
document.location.pathname // "/path/a.html"
document.location.search // "?x=111"返回一个URL的查询部分
document.location.hash // "#part1"返回一个URL的锚部分 
document.location.user // "user"
document.location.password // "passed"

1.location.reload()相当于刷新当前页面
location.reload(force)
说明：如果该方法没有规定参数，或者参数是 false，它就会用 HTTP 头 If-Modified-Since 来检测服务器上的文档是否已改变。如果文档已改变，reload() 会再次下载该文档。如果文档未改变，则该方法将从缓存中装载文档。这与用户单击浏览器的刷新按钮的效果是完全一样的。
如果把该方法的参数设置为 true，那么无论文档的最后修改日期是什么，它都会绕过缓存，从服务器上重新下载该文档。这与用户在单击浏览器的刷新按钮时按住 Shift 健的效果是完全一样。
 <input type="button" id="btn" value="加载" />
 var btn = document.getElementById('btn');
        btn.onclick = function(){
            window.location.reload();
        }
2.location.assign(URL) 加载新的文档可以返回上一级页面
 <input type="button" id="btn" value="加载" />
 var btn = document.getElementById('btn');
        btn.onclick = function(){
            window.location.assgin("http;//www.w3school.com.cn");
        }    
 3.location.replace(newURL)无法返回上一个页面
 定义：replace() 方法可用一个新文档取代当前文档.语法：location.replace(newURL)
 说明：replace() 方法不会在 History 对象中生成一个新的纪录。当使用该方法时，新的 URL 将覆盖 History 对象中的当前纪录
  <input type="button" id="btn" value="加载" />
 var btn = document.getElementById('btn');
        btn.onclick = function(){
            window.location.replace("http;//www.w3school.com.cn");
        }   
 
        
        
        
        
        
        
        

