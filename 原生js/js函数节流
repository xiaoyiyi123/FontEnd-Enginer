函数节流：本质就是 让时间一定在超过规定的时间执行一次
比如规定的时间2秒触发一次事件，一定是每隔两秒触发一次事件

时间戳的方法实现函数节流

function throttle(fn,delay){
  var previous = 0;
  //使用闭包返回一个函数并且调用到闭包函数外面的变量previous
  return function(){
     var now = new Date(),
         _this = this,
         args = arguments;
     if(now - previous > delay){
            fn.apply(_this,args);
            previous = now
     } 
  }
}
function sayThrottle(){
    console.log("节流成功");
}
var test = document.getElementById('test');
test.addEventListener('mousemove',throttle(sayThrottle));

定时器加上开关的方法实现
function success(){
            console.log("success");
        }
function throttle(fn, delay){
   var flag = true;
   return function(){
         if(!flag) return;
         flag = false;
         setTimeout(function(){
         fn.apply(this);
         flag = true;//设置的delay的时间之后将flag设置为true
         },delay);
         } 
}

var oThrottle = throttle(success,2000);
var btn = document.getElementById("btn");
btn.addEventListener('click',oThrottle);

        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
