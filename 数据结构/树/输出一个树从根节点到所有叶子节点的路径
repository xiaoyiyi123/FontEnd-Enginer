function TreeNode(val){
		this.val = val;
		this.left = this.right = null;
	}
	var node1 = new TreeNode(5);
	var node2 = new TreeNode(4);
	var node3 = new TreeNode(8);
	var node4 = new TreeNode(11);
	var node5 = new TreeNode(13);
	var node6 = new TreeNode(4);
	var node7 = new TreeNode(7);
	var node8 = new TreeNode(2);
	var node9 = new TreeNode(5);
	var node10 = new TreeNode(1);

	node1.left = node2;
	node1.right = node3;
	node2.left = node4;
	node3.left = node5;
	node3.right = node6;
	node4.left = node7;
	node4.right = node8;
	node6.left = node9;
	node6.right = node10;

	//前序深度遍历
	// function dfs(root){
	// 	if(root !== null){
	// 		console.log(root.val);
	// 		dfs(root.left);
	// 		dfs(root.right);
	// 	}
	// }

	// dfs(node1)

	function pathSum(root){
		var result =  [];
		var temp = 0;
		var path = [];
		if(root === null){
			
			return result;
		}
		if(root.left === null && root.right === null){
			result.push(root.val);
			return result;
		}
		leftNode = pathSum(root.left);
		

		for(var i = 0; i < leftNode.length; i++ ){
			
			result.push(root.val +'->'+ leftNode[i])
		}
		rightNode = pathSum(root.right);
		for(var i = 0; i < rightNode.length; i++ ){
			result.push(root.val+'->'+ rightNode[i])
			//result.push(rightNode[i])
		}

		return result;
	}
	console.log(pathSum(node1))
